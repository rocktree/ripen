# 
# Ripen Configuration
# ====================
# 
# Use this file to set your configuration before you run the
# ripen command. Then Ripen knows what to do and what to
# ignore.
# 
# -------------------------------------- Update System
# 
# It's good to update and upgrade your system before running
# through these commands. But if you want to skip it, set it
# to false.
# 
update_system=true
# 
# We will also reboot your system when the script is
# complete.
# 
reboot=true
# 
# -------------------------------------- Development Libraries
# 
# It's recommended you install all of these, but you can
# choose to omit some if you'd like. If you are omit one, BE
# SURE IT WON'T CAUSE CONFLICTS IN YOUR FUTURE
# INSTALLATIONS.
# 
dev_libs=(
  build-essential 
  zlib1g-dev 
  libssl-dev 
  libreadline-gplv2-dev 
  python-software-properties 
  make 
  libxml2 
  libxml2-dev 
  libxslt1-dev 
  imagemagick 
  libmagickwand-dev 
  libmagic-dev
  nodejs 
)
# 
# -------------------------------------- User Account
# 
# We assume you have no user and add one here. You can
# change the default behavior and the user's attributes.
# 
add_user=true
user=(
  ['username']='burtmacklin'
  ['password']='password'
  ['options']='--create-home --user-group --shell /bin/bash'
  ['sudo']=true
)
# 
# We assume you are running this script as "root" but that
# you wouldn't typically login as root. Let's set the user
# you would typically login as.
# 
# NOTE: IF YOU'VE CREATED A NEW USER, THIS SHOULD MATCH THE
# USERNAME YOU CREATED.
# 
username='burtmacklin'
# 
# -------------------------------------- Bash Config
# 
# We're going to do a few things here. You can skip this
# step by setting adjust_bash_config to false.
# 
# We'll remove your bash_profile file in your user's home
# directory and replace it with the specified bashrc file.
# The default linked file is Digital Ocean's default file,
# with a few added helpers.
# 
adjust_bash_config=true
bashrc_url='https://raw.githubusercontent.com/rocktree/ripen/master/bashrc'
# 
# -------------------------------------- Git
# 
# Git is version control for your code repositories. It is
# widely used by developers in the open source community.
# 
install_git=true
git=(
  ['name']='My Server'                # full name of git user
  ['email']='myserver@example.com'    # email of git user
  ['colors']=true                     # enable coloring in output
)
# 
# -------------------------------------- Nginx
# 
# Nginx is an awesome web server. We don't need to mess with
# it out of the gate. Just choose whether or not to install
# it.
# 
install_nginx=true
# 
# 
# -------------------------------------- MySQL
# 
# MySQL is a widely-used database. You have the option to
# also install PostgreSQL in the next step.
# 
install_mysql=true
mysql=(
  ['root_password']='password'        # password for root user
)
# 
# -------------------------------------- PostgreSQL
# 
# PostgreSQL is another database server you can install. It
# will come preloaded with a postgres user.
# 
install_postgresql=true
# 
# -------------------------------------- Ruby
# 
# At this time, this script only supports installing Ruby
# via rbenv. If you'd rather use rvm, then you should set
# this installation to false and install rvm manually (or
# you can contribute to this script!).
# 
install_rbenv=true
# 
# We're going to start with just one installation of ruby.
# Set your version here. Note: You can ignore this if you're
# not installing ruby.
# 
ruby_version='2.1.4'
# 
# We also install bundler by default (if you install ruby),
# since it is a great gem manager for ruby projects. Note:
# If you are skipping ruby installation, this will not run,
# even if set to true.
# 
install_bundler=true
